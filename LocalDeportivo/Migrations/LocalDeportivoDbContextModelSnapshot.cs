// <auto-generated />
using System;
using LocalDeportivo.LocalDbContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace LocalDeportivo.Migrations
{
    [DbContext(typeof(LocalDeportivoDbContext))]
    partial class LocalDeportivoDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.10")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

            modelBuilder.Entity("LocalDeportivo.Models.Bodega", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("CodigoBodega")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Bodegas");
                });

            modelBuilder.Entity("LocalDeportivo.Models.Categoria", b =>
                {
                    b.Property<int>("CodigoCategoria")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("NombreCategoria")
                        .HasColumnType("text");

                    b.HasKey("CodigoCategoria");

                    b.ToTable("Categorias");
                });

            modelBuilder.Entity("LocalDeportivo.Models.Cliente", b =>
                {
                    b.Property<int>("CodigoCliente")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Correo")
                        .HasColumnType("text");

                    b.Property<string>("Direccion")
                        .HasColumnType("text");

                    b.Property<string>("Nombre")
                        .HasColumnType("text");

                    b.Property<string>("Telefono")
                        .HasColumnType("text");

                    b.HasKey("CodigoCliente");

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("LocalDeportivo.Models.DetalleFactura", b =>
                {
                    b.Property<int>("CodigoDetalleFactura")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("Cantidad")
                        .HasColumnType("integer");

                    b.Property<string>("Descripcion")
                        .HasColumnType("text");

                    b.Property<int>("FacturaId")
                        .HasColumnType("integer");

                    b.Property<float>("Precio")
                        .HasColumnType("real");

                    b.Property<int?>("ProductoCodigoProducto")
                        .HasColumnType("integer");

                    b.HasKey("CodigoDetalleFactura");

                    b.HasIndex("FacturaId");

                    b.HasIndex("ProductoCodigoProducto");

                    b.ToTable("DetalleFacturas");
                });

            modelBuilder.Entity("LocalDeportivo.Models.Empleado", b =>
                {
                    b.Property<int>("CodigoEmpleado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("BodegaId")
                        .HasColumnType("integer");

                    b.Property<string>("Correo")
                        .HasColumnType("text");

                    b.Property<string>("Direccion")
                        .HasColumnType("text");

                    b.Property<int>("EdadEmpleado")
                        .HasColumnType("integer");

                    b.Property<string>("Nombre")
                        .HasColumnType("text");

                    b.Property<string>("Telefono")
                        .HasColumnType("text");

                    b.HasKey("CodigoEmpleado");

                    b.HasIndex("BodegaId");

                    b.ToTable("Empleados");
                });

            modelBuilder.Entity("LocalDeportivo.Models.EntradaSalida", b =>
                {
                    b.Property<int>("CodigoEntradaSalida")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("BodegaId")
                        .HasColumnType("integer");

                    b.Property<int>("Cantidad")
                        .HasColumnType("integer");

                    b.Property<int>("EmpleadoId")
                        .HasColumnType("integer");

                    b.Property<bool>("Entrada")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("InventarioCodigoInventario")
                        .HasColumnType("integer");

                    b.Property<int>("ProductoId")
                        .HasColumnType("integer");

                    b.Property<bool>("Salida")
                        .HasColumnType("boolean");

                    b.HasKey("CodigoEntradaSalida");

                    b.HasIndex("BodegaId");

                    b.HasIndex("EmpleadoId");

                    b.HasIndex("InventarioCodigoInventario");

                    b.HasIndex("ProductoId");

                    b.ToTable("EntradaSalidas");
                });

            modelBuilder.Entity("LocalDeportivo.Models.Factura", b =>
                {
                    b.Property<int>("CodigoFactura")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("ClienteId")
                        .HasColumnType("integer");

                    b.Property<string>("CodigoCliente")
                        .HasColumnType("text");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Nit")
                        .HasColumnType("text");

                    b.HasKey("CodigoFactura");

                    b.HasIndex("ClienteId");

                    b.ToTable("Facturas");
                });

            modelBuilder.Entity("LocalDeportivo.Models.Inventario", b =>
                {
                    b.Property<int>("CodigoInventario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("Cantidad")
                        .HasColumnType("integer");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("CodigoInventario");

                    b.ToTable("Inventarios");
                });

            modelBuilder.Entity("LocalDeportivo.Models.Producto", b =>
                {
                    b.Property<int>("CodigoProducto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("CategoryId")
                        .HasColumnType("integer");

                    b.Property<string>("Color")
                        .HasColumnType("text");

                    b.Property<string>("Descripcion")
                        .HasColumnType("text");

                    b.Property<string>("Marca")
                        .HasColumnType("text");

                    b.Property<string>("NombreProducto")
                        .HasColumnType("text");

                    b.Property<int>("Precio")
                        .HasColumnType("integer");

                    b.Property<int?>("ProveedorCodigoProveedor")
                        .HasColumnType("integer");

                    b.Property<int>("Stock")
                        .HasColumnType("integer");

                    b.Property<string>("Talla")
                        .HasColumnType("text");

                    b.Property<int?>("TipoProductoCodigoCategoria")
                        .HasColumnType("integer");

                    b.HasKey("CodigoProducto");

                    b.HasIndex("ProveedorCodigoProveedor");

                    b.HasIndex("TipoProductoCodigoCategoria");

                    b.ToTable("Productos");
                });

            modelBuilder.Entity("LocalDeportivo.Models.Proveedor", b =>
                {
                    b.Property<int>("CodigoProveedor")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Direccion")
                        .HasColumnType("text");

                    b.Property<string>("Nit")
                        .HasColumnType("text");

                    b.Property<string>("NombreProveedor")
                        .HasColumnType("text");

                    b.Property<string>("Telefono")
                        .HasColumnType("text");

                    b.HasKey("CodigoProveedor");

                    b.ToTable("Proveedores");
                });

            modelBuilder.Entity("LocalDeportivo.Models.Sede", b =>
                {
                    b.Property<int>("CodigoSede")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("BodegaId")
                        .HasColumnType("integer");

                    b.Property<string>("Direccion")
                        .HasColumnType("text");

                    b.Property<string>("NombreSede")
                        .HasColumnType("text");

                    b.Property<string>("NumeroTelefonico")
                        .HasColumnType("text");

                    b.HasKey("CodigoSede");

                    b.HasIndex("BodegaId");

                    b.ToTable("Sedes");
                });

            modelBuilder.Entity("LocalDeportivo.Models.DetalleFactura", b =>
                {
                    b.HasOne("LocalDeportivo.Models.Factura", "Factura")
                        .WithMany("DetalleFacturas")
                        .HasForeignKey("FacturaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LocalDeportivo.Models.Producto", "Producto")
                        .WithMany()
                        .HasForeignKey("ProductoCodigoProducto");

                    b.Navigation("Factura");

                    b.Navigation("Producto");
                });

            modelBuilder.Entity("LocalDeportivo.Models.Empleado", b =>
                {
                    b.HasOne("LocalDeportivo.Models.Bodega", "EmpleadoBodega")
                        .WithMany("Empleados")
                        .HasForeignKey("BodegaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EmpleadoBodega");
                });

            modelBuilder.Entity("LocalDeportivo.Models.EntradaSalida", b =>
                {
                    b.HasOne("LocalDeportivo.Models.Bodega", "EntradaSalidaSede")
                        .WithMany("EntradaSalidas")
                        .HasForeignKey("BodegaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LocalDeportivo.Models.Empleado", "EntradaSalidaEmpleado")
                        .WithMany()
                        .HasForeignKey("EmpleadoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LocalDeportivo.Models.Inventario", null)
                        .WithMany("EntradaSalidas")
                        .HasForeignKey("InventarioCodigoInventario");

                    b.HasOne("LocalDeportivo.Models.Producto", "EntradaSalidaProducto")
                        .WithMany()
                        .HasForeignKey("ProductoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EntradaSalidaEmpleado");

                    b.Navigation("EntradaSalidaProducto");

                    b.Navigation("EntradaSalidaSede");
                });

            modelBuilder.Entity("LocalDeportivo.Models.Factura", b =>
                {
                    b.HasOne("LocalDeportivo.Models.Cliente", null)
                        .WithMany("Facturas")
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("LocalDeportivo.Models.Producto", b =>
                {
                    b.HasOne("LocalDeportivo.Models.Proveedor", "Proveedor")
                        .WithMany("Productos")
                        .HasForeignKey("ProveedorCodigoProveedor");

                    b.HasOne("LocalDeportivo.Models.Categoria", "TipoProducto")
                        .WithMany("Productos")
                        .HasForeignKey("TipoProductoCodigoCategoria");

                    b.Navigation("Proveedor");

                    b.Navigation("TipoProducto");
                });

            modelBuilder.Entity("LocalDeportivo.Models.Sede", b =>
                {
                    b.HasOne("LocalDeportivo.Models.Bodega", "SedeBodega")
                        .WithMany()
                        .HasForeignKey("BodegaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SedeBodega");
                });

            modelBuilder.Entity("LocalDeportivo.Models.Bodega", b =>
                {
                    b.Navigation("Empleados");

                    b.Navigation("EntradaSalidas");
                });

            modelBuilder.Entity("LocalDeportivo.Models.Categoria", b =>
                {
                    b.Navigation("Productos");
                });

            modelBuilder.Entity("LocalDeportivo.Models.Cliente", b =>
                {
                    b.Navigation("Facturas");
                });

            modelBuilder.Entity("LocalDeportivo.Models.Factura", b =>
                {
                    b.Navigation("DetalleFacturas");
                });

            modelBuilder.Entity("LocalDeportivo.Models.Inventario", b =>
                {
                    b.Navigation("EntradaSalidas");
                });

            modelBuilder.Entity("LocalDeportivo.Models.Proveedor", b =>
                {
                    b.Navigation("Productos");
                });
#pragma warning restore 612, 618
        }
    }
}
